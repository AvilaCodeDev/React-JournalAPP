{"version":3,"sources":["firebase/firebaseConfig.js","helpers/fileUpload.js","helpers/loadNotes.js","types/types.js","actions/notes.js","hooks/useForm.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","actions/ui.js","actions/auth.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/SideBar.js","components/journal/JournalScreen.js","routers/PublicRoute.js","routers/PrivateRoute.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","routers/AppRouter.js","reducers/notesReducer.js","reducers/uiReducer.js","store/store.js","reducers/authReducer.js","JournalApp.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","fileUpload","file","a","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","loadNotes","uid","collection","get","notesSnap","notes","forEach","snapHijo","push","id","data","types","activeNote","note","type","payload","addNewNote","startLoadingNotes","dispatch","setNotes","startSaveNote","dispatc","getState","url","noteToFirestore","doc","update","refreshNote","Swal","fire","title","deleteNote","useForm","initialState","useState","values","setValues","reset","newFormState","handleInputChange","target","name","value","NotesAppBar","useDispatch","active","useSelector","state","className","style","display","onChange","e","files","text","allowOutsideClick","showConfirmButton","willOpen","showLoading","fileUrl","close","startUploading","onClick","document","querySelector","click","NoteScreen","formValues","activeId","useRef","useEffect","current","placeholder","autoComplete","alt","src","delete","startDeleting","NothingSelected","setErrors","err","removeError","finishLoading","startLoginEmailPassword","email","password","signInWithEmailAndPassword","then","user","login","displayName","catch","message","logOut","JournalEntry","date","noteDate","moment","backgroundSize","backgroundImage","format","JournalEntries","map","SideBar","signOut","newNote","Date","getTime","add","JournalScreen","PublicRoute","isAuthenticated","Component","component","rest","props","to","PrivateRoute","localStorage","setItem","location","pathname","LoginScreen","ui","msgError","loading","isFormValid","validator","isEmail","onSubmit","preventDefault","disabled","signInWithPopup","RegisterScreen","password2","trim","length","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmailPasswordName","AuthRouter","exact","path","AppRouter","checking","setChecking","isLoggedIN","setIsLoggedIN","onAuthStateChanged","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","filter","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.8a65210c.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyB2lbyqWZHPeRCsvvMIbOA0mJMRjLyOdzA\",\r\n    authDomain: \"react-app-44c1b.firebaseapp.com\",\r\n    projectId: \"react-app-44c1b\",\r\n    storageBucket: \"react-app-44c1b.appspot.com\",\r\n    messagingSenderId: \"372865871779\",\r\n    appId: \"1:372865871779:web:ac20501f534b1697d03416\"\r\n  };\r\n  // Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebase.firestore();\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport {\r\n    db,\r\n    googleAuthProvider,\r\n    firebase\r\n}","export const  fileUpload = async( file ) => {\r\n    \r\n    const cloudUrl = 'https://api.cloudinary.com/v1_1/dpnecu3jz/upload';\r\n\r\n    const formData = new FormData();\r\n\r\n    formData.append('upload_preset', 'react-journal');\r\n    formData.append('file', file);\r\n\r\n    try {\r\n        const resp = await fetch( cloudUrl, {\r\n            method: 'POST',\r\n            body: formData\r\n        } );\r\n\r\n        if( resp.ok ){\r\n            \r\n            const cloudResp = await resp.json();\r\n            return cloudResp.secure_url;\r\n\r\n        }else{\r\n\r\n            throw await resp.json();\r\n\r\n        }\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n}","import { db } from \"../firebase/firebaseConfig\"\r\n\r\nexport const loadNotes = async( uid ) => {\r\n    const notesSnap = await db.collection(`${ uid }/journal/notes`).get();\r\n    const notes = [];\r\n\r\n    notesSnap.forEach( snapHijo => {\r\n        notes.push({\r\n            id: snapHijo.id,\r\n            ...snapHijo.data()\r\n        })\r\n    });\r\n\r\n    return notes;\r\n} ","export const types = {\r\n    \r\n    login: '[Auth] Login',\r\n    logout: '[Auth] Logout',\r\n\r\n    uiSetError: '[UI] Set Error',\r\n    uiRemoveError: '[UI] Remove Error',\r\n    uiStartLoading: '[UI] Start loading',\r\n    uiFinishLoading: '[UI] Finish Loading',\r\n\r\n    notesAddNew: '[Notes] New Note',\r\n    notesActive: '[Notes] Set Active Note',\r\n    notesLoad: '[Notes] Load Notes',\r\n    notesUpdated: '[Notes] Updated Note Saved',\r\n    notesFileUrl: '[Notes] Updated Image Url',\r\n    notesDelete: '[Notes] Delete Note',\r\n    notesLogOutCleaning: '[Notes] Logout Cleaning'\r\n    \r\n}","import Swal from \"sweetalert2\";\r\n\r\nimport { db } from \"../firebase/firebaseConfig\";\r\nimport { fileUpload } from \"../helpers/fileUpload\";\r\nimport { loadNotes } from \"../helpers/loadNotes\";\r\nimport { types } from \"../types/types\";\r\n\r\n\r\n\r\nexport const startNewNote = () => {\r\n    return async( dispatch, getState ) => {\r\n\r\n        const uid = getState().auth.uid;\r\n\r\n        const newNote = {\r\n            title : '',\r\n            body : '',\r\n            date : new Date().getTime()\r\n        }\r\n\r\n        const doc = await db.collection(`${ uid }/journal/notes`).add( newNote );\r\n        dispatch( activeNote( doc.id, newNote ) );\r\n        dispatch( addNewNote( doc.id, newNote ) );\r\n    }\r\n}\r\n\r\nexport const activeNote = ( id, note ) => ({\r\n    type: types.notesActive,\r\n    payload: {\r\n        id,\r\n        ...note\r\n    }\r\n});\r\n\r\nexport const addNewNote = ( id, note ) => ({\r\n    type: types.notesAddNew,\r\n    payload: {\r\n        id, ...note\r\n    }\r\n});\r\n\r\nexport const startLoadingNotes = ( uid ) => {\r\n    return async( dispatch ) => {\r\n\r\n        const notes = await loadNotes( uid );\r\n\r\n        dispatch( setNotes(notes) );\r\n\r\n    }\r\n}\r\n\r\nexport const setNotes = ( notes ) => ({\r\n    type: types.notesLoad,\r\n    payload: notes\r\n});\r\n\r\nexport const  startSaveNote = ( note ) => {\r\n    return async( dispatc, getState ) => {\r\n\r\n        const uid = getState().auth.uid;\r\n\r\n        if( !note.url ){\r\n            delete note.url;\r\n        }\r\n\r\n        const noteToFirestore = { ...note };\r\n        delete noteToFirestore.id;\r\n\r\n        await db.doc(`/${ uid }/journal/notes/${ note.id }`).update( noteToFirestore );\r\n\r\n        dispatc( refreshNote( note.id, note ) );\r\n        Swal.fire('Saved', note.title, 'success');\r\n    }\r\n}\r\n\r\nexport const refreshNote = (id, note) => ({\r\n    type: types.notesUpdated,\r\n    payload: {\r\n        id,\r\n        note: {\r\n            id,\r\n            ...note\r\n        }\r\n    }\r\n})\r\n\r\nexport const startUploading = ( file ) => {\r\n    return async( dispatch, getState ) => {\r\n        const { active } = getState().notes;\r\n\r\n        Swal.fire({\r\n            title: 'Uploading...',\r\n            text: 'Please wait...',\r\n            allowOutsideClick: false,\r\n            showConfirmButton: false,\r\n            willOpen: () => {\r\n                Swal.showLoading();\r\n            }\r\n        });\r\n\r\n        const fileUrl = await fileUpload( file );\r\n        active.url = fileUrl;\r\n\r\n        dispatch( startSaveNote( active ) );\r\n        \r\n        Swal.close();\r\n    }\r\n}\r\n\r\nexport const startDeleting = ( id ) => {\r\n    return async( dispatch, getState ) => {\r\n\r\n        const uid = getState().auth.uid;\r\n        await db.doc(`${ uid }/journal/notes/${ id }`).delete();\r\n\r\n        dispatch( deleteNote( id ) );\r\n    }\r\n}\r\n\r\nexport const deleteNote = ( id ) => ({\r\n    type: types.notesDelete,\r\n    payload: id\r\n})\r\n\r\nexport const notesLogOut = () => ({\r\n    type: types.notesLogOutCleaning\r\n})","import { useState } from \"react\"\r\n\r\nexport const useForm = (initialState = {}) => {\r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = ( newFormState = initialState ) => {\r\n        setValues(newFormState);\r\n    }\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setValues({\r\n            ...values,\r\n            [ target.name ] : target.value\r\n        });\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n}","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startSaveNote, startUploading } from '../../actions/notes';\r\n\r\nexport const NotesAppBar = () => {\r\n    const dispatch = useDispatch();\r\n    const { active } = useSelector(state => state.notes)\r\n\r\n\r\n    const handleUpdate = () => {\r\n        dispatch( startSaveNote( active ) );\r\n    }\r\n\r\n    const handlePictureClick = () => {\r\n        document.querySelector('#file-selector').click();\r\n    }\r\n\r\n    const handleFileChange = (e) => {\r\n        const file = e.target.files[0];\r\n        if ( file ){\r\n            dispatch( startUploading( file ) );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"notes__appbar\">\r\n            <span>28 agosto 2020</span>\r\n\r\n            <input\r\n                id=\"file-selector\"\r\n                type=\"file\"\r\n                style={ { display : 'none' } }\r\n                onChange={ handleFileChange }\r\n            />\r\n\r\n            <div>\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={ handlePictureClick }\r\n                >\r\n                    Picture\r\n                </button>\r\n\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={ handleUpdate }\r\n                >\r\n                    Save\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { activeNote, startDeleting } from '../../actions/notes';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { NotesAppBar } from './NotesAppBar'\r\n\r\nexport const NoteScreen = () => {\r\n\r\n    const { active:note } = useSelector( state => state.notes );\r\n    const dispatch = useDispatch();\r\n    const [ formValues, handleInputChange, reset ] = useForm( note );\r\n\r\n    const activeId = useRef( note.id );\r\n\r\n    useEffect(() => {\r\n        \r\n        if(note.id !== activeId.current ){\r\n            reset( note );\r\n            activeId.current = note.id;\r\n        }\r\n\r\n    }, [ note, reset ]);\r\n\r\n    useEffect(() => {\r\n        \r\n        dispatch( activeNote( formValues.id, { ...formValues } ) );\r\n\r\n    }, [ formValues, dispatch ]);\r\n\r\n    const { body, title, id } = formValues;\r\n\r\n    const handleDelete = () => {\r\n        dispatch( startDeleting( id ) );\r\n    }\r\n\r\n    return (\r\n        <div className=\"notes__main-content\">\r\n            \r\n            <NotesAppBar />\r\n\r\n            <div className=\"notes__content\">\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Some awesome title\"\r\n                    className=\"notes__title-input\"\r\n                    autoComplete=\"off\"\r\n                    value={ title }\r\n                    name=\"title\"\r\n                    onChange={ handleInputChange }\r\n                />\r\n                <textarea\r\n                    placeholder=\"what happened today?\"\r\n                    className=\"notes__textarea\"\r\n                    value={ body }\r\n                    name=\"body\"\r\n                    onChange={ handleInputChange }\r\n                ></textarea>\r\n                \r\n                {\r\n                    (note.url)\r\n                    &&\r\n                    (<div className=\"notes__image\">\r\n                        <img\r\n                            alt=\"imagen\"\r\n                            src={ note.url }\r\n                        />\r\n                    </div>)\r\n                }\r\n            </div>\r\n            <button \r\n                className=\"btn btn-danger\"\r\n                onClick={ handleDelete }    \r\n            >\r\n                Delete\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const NothingSelected = () => {\r\n    return (\r\n        <div className=\"nothing__main-content\">\r\n            <p>\r\n                Select something\r\n                <br/>\r\n                or create an entry\r\n            </p>\r\n            <i className=\"far fa-star fa-4x mt-5\"></i>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from '../types/types';\r\n\r\nexport const setErrors = (err) => ({\r\n    type: types.uiSetError,\r\n    payload: err\r\n})\r\n\r\nexport const removeError = () => ({\r\n    type: types.uiRemoveError\r\n})\r\n\r\nexport const startLoading = () => ({\r\n    type: types.uiStartLoading\r\n})\r\n\r\nexport const finishLoading = () => ({\r\n        type: types.uiFinishLoading\r\n})","import Swal from 'sweetalert2';\r\n\r\nimport { firebase, googleAuthProvider } from '../firebase/firebaseConfig';\r\nimport { types } from \"../types/types\";\r\nimport { notesLogOut } from './notes';\r\nimport { finishLoading, startLoading } from './ui';\r\n\r\nexport const startLoginEmailPassword = (email,password) => {\r\n    return (dispatch) => {\r\n        dispatch( startLoading() );\r\n        firebase.auth().signInWithEmailAndPassword(email, password)\r\n            .then( async ({ user }) => {\r\n                dispatch( login( user.uid, user.displayName ) );\r\n                dispatch( finishLoading() );\r\n            }).catch( e => {\r\n                dispatch( finishLoading() );\r\n                Swal.fire('Error', e.message, 'error');\r\n            });\r\n    }\r\n}\r\n\r\nexport const startRegisterWithEmailPasswordName = ( email, password, name ) => {\r\n    return (dispatch) => {\r\n        firebase.auth().createUserWithEmailAndPassword( email, password)\r\n            .then( async ({ user }) => {\r\n                await user.updateProfile({ displayName: name });\r\n                dispatch(login(user.uid, user.displayName));\r\n            }).catch( e => {\r\n                Swal.fire('Error', e.message, 'error');\r\n            });\r\n    }\r\n}\r\n\r\nexport const startGoogleLogin = () => {\r\n    return (dispatch) => {\r\n        firebase.auth().signInWithPopup( googleAuthProvider )\r\n            .then( ({ user }) => {\r\n                dispatch(login(user.uid, user.displayName));\r\n            });\r\n    }\r\n}\r\n\r\nexport const login = (uid, displayName) =>({\r\n    type: types.login,\r\n    payload: {\r\n        uid,\r\n        displayName\r\n    }\r\n});\r\n\r\nexport const startLogOut = () => {\r\n    return async ( dispatch ) => {\r\n        await firebase.auth().signOut();\r\n\r\n        dispatch( logOut() );\r\n        dispatch( notesLogOut() );\r\n    }\r\n}\r\n\r\nexport const logOut = () => ({\r\n    type: types.logout\r\n})","import React from 'react';\r\nimport moment from 'moment';\r\nimport { useDispatch } from 'react-redux';\r\nimport { activeNote } from '../../actions/notes';\r\n\r\n\r\nexport const JournalEntry = ({ id, date, title, body, url }) => {\r\n\r\n    const noteDate = moment(date);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleEntryClick = () => {\r\n        dispatch( activeNote( id, {\r\n            date,\r\n            title,\r\n            body,\r\n            url\r\n        } ) );\r\n    }\r\n\r\n    return (\r\n        <div \r\n            className=\"journal__entry pointer animate__animated animate__fadeIn animate__faster\"\r\n            onClick={ handleEntryClick }\r\n        >\r\n            {\r\n                url &&\r\n                <div \r\n                    className=\"journal__entry-picture\"\r\n                    style={{\r\n                        backgroundSize:'cover',\r\n                        backgroundImage: `url(${ url })`\r\n                    }}\r\n                ></div>\r\n            }\r\n            <div className=\"journal__entry-body\">\r\n                <p className=\"journal__entry-title\">\r\n                    { title }\r\n                </p>\r\n                <p className=\"journal__entry-content\">\r\n                    { body }\r\n                </p>\r\n            </div>\r\n\r\n            <div className=\"journal__entry-date-box\">\r\n                <span>{ noteDate.format( 'dddd' ) }</span>\r\n                <h4>{ noteDate.format('Do') }</h4>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { JournalEntry } from './JournalEntry';\r\n\r\n\r\nexport const JournalEntries = () => {\r\n\r\n    const { notes } = useSelector(state => state.notes)\r\n\r\n    return (\r\n        <div className=\"journal__entries\">\r\n            {\r\n                notes.map( note =>(\r\n                    <JournalEntry \r\n                        key={ note.id } \r\n                        {...note}\r\n                    />\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startLogOut } from '../../actions/auth';\r\nimport { startNewNote } from '../../actions/notes';\r\nimport { JournalEntries } from './JournalEntries';\r\n\r\n\r\nexport const SideBar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { name } = useSelector(state => state.auth)\r\n\r\n    const handleLogOut = () => {\r\n        dispatch( startLogOut() );\r\n        \r\n    }\r\n\r\n    const handleAddNew = () => {\r\n        dispatch( startNewNote() );\r\n    }\r\n\r\n    return (\r\n        <aside className=\"journal__sidebar\">\r\n            <div className= \"journal__sidebar-navbar\">\r\n                <h3 className=\"mt-5\">\r\n                    <i className=\"far fa-moon\"></i>\r\n                    <span> { name } </span>\r\n                </h3>\r\n\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={ handleLogOut }    \r\n                >\r\n                    Logout\r\n                </button>\r\n\r\n            </div>\r\n\r\n            <div \r\n                className=\"journal__new-entry\"\r\n                onClick={ handleAddNew }\r\n            >\r\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\r\n                <p className=\"mt-5\">\r\n                    New Entry\r\n                </p>\r\n            </div>\r\n\r\n            <JournalEntries />\r\n             \r\n        </aside>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { NoteScreen } from '../notes/NoteScreen';\r\nimport { NothingSelected } from './NothingSelected';\r\nimport { SideBar } from './SideBar';\r\n\r\nexport const JournalScreen = () => {\r\n\r\n    const { active } = useSelector(state => state.notes);\r\n\r\n    return (\r\n        <div className=\"journal__main-content animate__animated animate__fadeIn animate__faster\">\r\n            \r\n            <SideBar />\r\n\r\n            <main>\r\n                {\r\n                    ( active )\r\n                        ? (<NoteScreen />)\r\n                        : (<NothingSelected />)\r\n                }\r\n            </main>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Redirect,Route } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route { ...rest }\r\n        component={ (props) => (\r\n            ( !isAuthenticated )\r\n            ? <Component { ...props } />\r\n            : <Redirect to=\"/\" />\r\n        )}\r\n\r\n    />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    localStorage.setItem('lastPath', rest.location.pathname);\r\n\r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) => (\r\n                ( isAuthenticated )\r\n                ? <Component { ...props } />\r\n                : <Redirect to=\"auth/login\" />\r\n            )}\r\n\r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport validator from 'validator';\r\nimport { removeError, setErrors } from '../../actions/ui';\r\nimport { Link } from 'react-router-dom';\r\nimport { startGoogleLogin, startLoginEmailPassword } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { msgError, loading } = useSelector( state => state.ui );\r\n\r\n    const [ formValues, handleInputChange ] = useForm({\r\n        email: 'ocram_117@hotmail.com',\r\n        password: '123456'\r\n    });\r\n\r\n    const { email, password } = formValues;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n\r\n        if( isFormValid ){\r\n            dispatch( startLoginEmailPassword(email, password) );\r\n        }\r\n    }\r\n\r\n    const handleGoogleLogin = () =>{\r\n        dispatch( startGoogleLogin() );\r\n    }\r\n\r\n    const isFormValid = () => {\r\n        if( !validator.isEmail(email) ){\r\n            dispatch( setErrors('Email is not valid') );\r\n            return false;\r\n        }else if( password ){\r\n            dispatch( setErrors('Password should be at least 6 characters' ) );\r\n            return false;\r\n        }\r\n\r\n        dispatch( removeError() );\r\n        return true;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"auth__title\">Login</h3>\r\n            <form \r\n                className=\"animate__animated animate__fadeIn animate__faster\"\r\n                onSubmit={handleLogin}\r\n            >\r\n\r\n                {\r\n                    msgError &&\r\n                    (<div className=\"auth__alert-error\">\r\n                        {msgError}   \r\n                    </div>)\r\n                }\r\n\r\n                <input \r\n                    className=\"auth__input\"\r\n                    type=\"email\"\r\n                    placeholder=\"email\"\r\n                    name=\"email\"\r\n                    autoComplete=\"off\"\r\n                    value={email}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <input \r\n                    className=\"auth__input\"\r\n                    type=\"password\"\r\n                    placeholder=\"password\"\r\n                    name=\"password\"\r\n                    value={password}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    disabled={loading}\r\n                    className=\"btn btn-primary btn-block\"\r\n                >\r\n                    Login\r\n                </button>\r\n                <hr/>\r\n                <div className=\"auth__social-networks\">\r\n                    <p>Login with social networks</p>\r\n                    <div \r\n                        className=\"google-btn\"\r\n                        onClick={ handleGoogleLogin }\r\n                    >\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                        </div>\r\n                        <p className=\"btn-text\">\r\n                            <b>Sign in with google</b>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <Link \r\n                    to=\"/auth/register\"\r\n                    className=\"link\"\r\n                >\r\n                    Create New Account\r\n                </Link>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport validator from 'validator';\r\nimport { removeError, setErrors } from '../../actions/ui';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startRegisterWithEmailPasswordName } from '../../actions/auth';\r\n\r\nexport const RegisterScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { msgError } = useSelector( state => state.ui );\r\n\r\n    const [ formValues, handleInputChange ] = useForm({\r\n        name: 'Marco',\r\n        email: 'ocram_117@hotmail.com',\r\n        password: '123456',\r\n        password2: '123456'\r\n    });\r\n\r\n    const {name, email, password, password2} = formValues;\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n        if( isFormValid() ){\r\n            dispatch( startRegisterWithEmailPasswordName(email, password, name) );\r\n        }\r\n    }\r\n\r\n    const isFormValid = () => {\r\n        if( name.trim().length === 0 ){\r\n            dispatch( setErrors('Name is required') );\r\n            return false;\r\n        }else if( !validator.isEmail(email) ){\r\n            dispatch( setErrors('Email is not valid') );\r\n            return false;\r\n        }else if( password !== password2 || password.length < 5){\r\n            dispatch( setErrors('Password should be at least 6 characters long and match each other') );\r\n            return false;\r\n        }\r\n\r\n        dispatch( removeError() );\r\n        return true;\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <h3 className=\"auth__title\">Register</h3>\r\n        <form \r\n            className=\"animate__animated animate__fadeIn animate__faster\"\r\n            onSubmit={handleRegister}\r\n        >\r\n\r\n            {\r\n                msgError &&\r\n                (<div className=\"auth__alert-error\">\r\n                    {msgError}   \r\n                </div>)\r\n            }\r\n            \r\n            <input \r\n                className=\"auth__input\"\r\n                type=\"text\"\r\n                placeholder=\"Name\"\r\n                name=\"name\"\r\n                value={name}\r\n                autoComplete=\"off\"\r\n                onChange={handleInputChange}\r\n            />\r\n\r\n            <input \r\n                className=\"auth__input\"\r\n                type=\"email\"\r\n                placeholder=\"Email\"\r\n                name=\"email\"\r\n                value={email}\r\n                autoComplete=\"off\"\r\n                onChange={handleInputChange}\r\n            />\r\n\r\n            <input \r\n                className=\"auth__input\"\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                name=\"password\"\r\n                value={password}\r\n                onChange={handleInputChange}\r\n            />\r\n\r\n            <input \r\n                className=\"auth__input\"\r\n                type=\"password\"\r\n                placeholder=\"Confirm password\"\r\n                name=\"password2\"\r\n                value={password2}\r\n                onChange={handleInputChange}\r\n            />\r\n\r\n            <button\r\n                type=\"submit\"\r\n                className=\"btn btn-primary btn-block mb-5\"\r\n            >\r\n                Register\r\n            </button>\r\n            <Link \r\n                to=\"/auth/login\"\r\n                className=\"link mt-5\"\r\n            >\r\n                Already registered?\r\n            </Link>\r\n        </form>\r\n    </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport {\r\n    Redirect,\r\n    Route,\r\n    Switch\r\n  } from \"react-router-dom\";\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { RegisterScreen } from '../components/auth/RegisterScreen';\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n        <div className=\"auth__main\">\r\n            <div className=\"auth__box-container\">\r\n                <Switch>\r\n                    <Route exact path=\"/auth/login\" component={ LoginScreen }/>\r\n                    <Route exact path=\"/auth/register\" component={ RegisterScreen }/>\r\n\r\n                    <Redirect to=\"/auth/register\" />\r\n                </Switch>\r\n            </div>\r\n        </div>  \r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Redirect,\r\n    Switch\r\n  } from \"react-router-dom\";\r\n\r\nimport { firebase } from '../firebase/firebaseConfig';\r\n import { useDispatch } from 'react-redux';\r\n\r\nimport { JournalScreen } from '../components/journal/JournalScreen';\r\nimport { login } from '../actions/auth';\r\nimport { PublicRoute } from './PublicRoute';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { AuthRouter } from './AuthRouter';\r\nimport { startLoadingNotes } from '../actions/notes';\r\n\r\nexport const AppRouter = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const [checking, setChecking] = useState(true);\r\n    const [isLoggedIN, setIsLoggedIN] = useState(false);\r\n\r\n    useEffect(() => {\r\n        firebase.auth().onAuthStateChanged( async(user) => {\r\n            \r\n            if( user?.uid ){\r\n                dispatch( login( user.uid , user.displayName ) );\r\n                setIsLoggedIN(true);\r\n\r\n                dispatch( startLoadingNotes( user.uid ) );\r\n\r\n            }else{\r\n                setIsLoggedIN(false);\r\n            }\r\n\r\n            setChecking(false);\r\n\r\n        } );\r\n    }, [ dispatch, setChecking, setIsLoggedIN ])\r\n\r\n    if(checking){\r\n        return (\r\n            <h1>Wait...</h1>\r\n        )\r\n    }\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute\r\n                        path=\"/auth\"\r\n                        isAuthenticated={ isLoggedIN }\r\n                        component={ AuthRouter }\r\n                    />\r\n                    <PrivateRoute \r\n                        exact \r\n                        path=\"/\"\r\n                        isAuthenticated={ isLoggedIN }\r\n                        component={ JournalScreen }\r\n                    />\r\n\r\n                    <Redirect to=\"/auth/login\"/>\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","/*\r\n    {\r\n        notes: [],\r\n        active: null,\r\n        active: {\r\n            id: hfkdajhka,\r\n            title: string,\r\n            body: string,\r\n            imageUrl: image,\r\n            date: number\r\n        }\r\n    }\r\n*/\r\n\r\nimport { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    notes: [],\r\n    active: null\r\n}\r\nexport const notesReducer = ( state = initialState, action ) => {\r\n    switch (action.type) {\r\n        case types.notesActive:\r\n            return{\r\n                ...state,\r\n                active: {\r\n                    ...action.payload\r\n                }\r\n            }\r\n        case types.notesAddNew:\r\n            return{\r\n                ...state,\r\n                notes: [ action.payload, ...state.notes ]\r\n            }\r\n\r\n        case types.notesLoad:\r\n            return{\r\n                ...state,\r\n                notes: [...action.payload]\r\n            }\r\n        case types.notesUpdated:\r\n            return {\r\n                ...state,\r\n                notes: state.notes.map(\r\n                    note => note.id === action.payload.id\r\n                        ? action.payload.note\r\n                        : note\r\n                )\r\n            }\r\n        case types.notesDelete:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: state.notes.filter( note => note.id !== action.payload)\r\n            }\r\n        case types.notesLogOutCleaning:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes : []\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from '../types/types';\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    msgError: null\r\n}\r\n\r\n\r\nexport const uiReducer = ( state = initialState , action ) => {\r\n    switch (action.type) {\r\n        case types.uiSetError:\r\n            return{\r\n                ...state,\r\n                msgError: action.payload\r\n            }\r\n        case types.uiRemoveError:\r\n            return{\r\n                ...state,\r\n                msgError: null\r\n            }\r\n        case types.uiStartLoading:\r\n            return{\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case types.uiFinishLoading:\r\n            return{\r\n                ...state,\r\n                loading: false\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { authReducer } from \"../reducers/authReducer\";\r\nimport { notesReducer } from \"../reducers/notesReducer\";\r\nimport { uiReducer } from \"../reducers/uiReducer\";\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    ui: uiReducer,\r\n    notes: notesReducer\r\n});\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    )\r\n);","import { types } from \"../types/types\";\r\n\r\nexport const authReducer = ( state = {}, action) => {\r\n    switch (action.type) {\r\n        case types.login:\r\n            \r\n            return {\r\n                uid: action.payload.uid,\r\n                name: action.payload.displayName\r\n            };\r\n                    \r\n        case types.logout:\r\n\r\n            return {};\r\n    \r\n        default:\r\n            \r\n            return state;\r\n    }\r\n}","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport { AppRouter } from './routers/AppRouter';\r\nimport { store } from './store/store';\r\n\r\nexport const JournalApp = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { JournalApp } from './JournalApp';\n\nimport'./styles/styles.scss';\n\n\nReactDOM.render(\n  <JournalApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}